{
  actions: {
    addCustomLabelsToSelfHostedRunnerForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    addCustomLabelsToSelfHostedRunnerForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    addSelectedRepoToOrgSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    approveWorkflowRun: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    cancelWorkflowRun: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createOrUpdateEnvironmentSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createOrUpdateOrgSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createOrUpdateRepoSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createRegistrationTokenForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createRegistrationTokenForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createRemoveTokenForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createRemoveTokenForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createWorkflowDispatch: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteActionsCacheById: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteActionsCacheByKey: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteArtifact: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteEnvironmentSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteOrgSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteRepoSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteSelfHostedRunnerFromOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteSelfHostedRunnerFromRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteWorkflowRun: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteWorkflowRunLogs: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    disableSelectedRepositoryGithubActionsOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    disableWorkflow: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    downloadArtifact: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    downloadJobLogsForWorkflowRun: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    downloadWorkflowRunAttemptLogs: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    downloadWorkflowRunLogs: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    enableSelectedRepositoryGithubActionsOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    enableWorkflow: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getActionsCacheList: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getActionsCacheUsage: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getActionsCacheUsageByRepoForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getActionsCacheUsageForEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getActionsCacheUsageForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAllowedActionsOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAllowedActionsRepository: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getArtifact: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getEnvironmentPublicKey: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getEnvironmentSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getGithubActionsDefaultWorkflowPermissionsEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getGithubActionsDefaultWorkflowPermissionsOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getGithubActionsDefaultWorkflowPermissionsRepository: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getGithubActionsPermissionsOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getGithubActionsPermissionsRepository: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getJobForWorkflowRun: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getOrgPublicKey: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getOrgSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPendingDeploymentsForRun: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRepoPermissions: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRepoPublicKey: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRepoSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getReviewsForRun: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getSelfHostedRunnerForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getSelfHostedRunnerForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getWorkflow: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getWorkflowAccessToRepository: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getWorkflowRun: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getWorkflowRunAttempt: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getWorkflowRunUsage: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getWorkflowUsage: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listArtifactsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listEnvironmentSecrets: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listJobsForWorkflowRun: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listJobsForWorkflowRunAttempt: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listLabelsForSelfHostedRunnerForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listLabelsForSelfHostedRunnerForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listOrgSecrets: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listRepoSecrets: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listRepoWorkflows: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listRunnerApplicationsForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listRunnerApplicationsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listSelectedReposForOrgSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listSelectedRepositoriesEnabledGithubActionsOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listSelfHostedRunnersForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listSelfHostedRunnersForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listWorkflowRunArtifacts: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listWorkflowRuns: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listWorkflowRunsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    reRunJobForWorkflowRun: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    reRunWorkflow: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    reRunWorkflowFailedJobs: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeAllCustomLabelsFromSelfHostedRunnerForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeAllCustomLabelsFromSelfHostedRunnerForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeCustomLabelFromSelfHostedRunnerForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeCustomLabelFromSelfHostedRunnerForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeSelectedRepoFromOrgSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    reviewPendingDeploymentsForRun: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setAllowedActionsOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setAllowedActionsRepository: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setCustomLabelsForSelfHostedRunnerForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setCustomLabelsForSelfHostedRunnerForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setGithubActionsDefaultWorkflowPermissionsEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setGithubActionsDefaultWorkflowPermissionsOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setGithubActionsDefaultWorkflowPermissionsRepository: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setGithubActionsPermissionsOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setGithubActionsPermissionsRepository: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setSelectedReposForOrgSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setSelectedRepositoriesEnabledGithubActionsOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setWorkflowAccessToRepository: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  activity: {
    checkRepoIsStarredByAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteRepoSubscription: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteThreadSubscription: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getFeeds: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRepoSubscription: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getThread: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getThreadSubscriptionForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listEventsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listNotificationsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listOrgEventsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPublicEvents: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPublicEventsForRepoNetwork: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPublicEventsForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPublicOrgEvents: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReceivedEventsForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReceivedPublicEventsForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listRepoEvents: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listRepoNotificationsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReposStarredByAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReposStarredByUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReposWatchedByUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listStargazersForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listWatchedReposForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listWatchersForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    markNotificationsAsRead: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    markRepoNotificationsAsRead: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    markThreadAsRead: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setRepoSubscription: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setThreadSubscription: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    starRepoForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    unstarRepoForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  apps: {
    addRepoToInstallation: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    addRepoToInstallationForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    checkToken: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createFromManifest: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createInstallationAccessToken: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteAuthorization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteInstallation: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteToken: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAuthenticated: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getBySlug: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getInstallation: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getOrgInstallation: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRepoInstallation: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getSubscriptionPlanForAccount: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getSubscriptionPlanForAccountStubbed: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getUserInstallation: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getWebhookConfigForApp: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getWebhookDelivery: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listAccountsForPlan: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listAccountsForPlanStubbed: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listInstallationReposForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listInstallations: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listInstallationsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPlans: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPlansStubbed: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReposAccessibleToInstallation: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listSubscriptionsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listSubscriptionsForAuthenticatedUserStubbed: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listWebhookDeliveries: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    redeliverWebhookDelivery: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeRepoFromInstallation: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeRepoFromInstallationForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    resetToken: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    revokeInstallationAccessToken: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    scopeToken: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    suspendInstallation: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    unsuspendInstallation: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateWebhookConfigForApp: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  billing: {
    getGithubActionsBillingOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getGithubActionsBillingUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getGithubAdvancedSecurityBillingGhe: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getGithubAdvancedSecurityBillingOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getGithubPackagesBillingOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getGithubPackagesBillingUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getSharedStorageBillingOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getSharedStorageBillingUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  checks: {
    create: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createSuite: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    get: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getSuite: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listAnnotations: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForRef: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForSuite: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listSuitesForRef: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    rerequestRun: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    rerequestSuite: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setSuitesPreferences: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    update: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  codeScanning: {
    deleteAnalysis: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAlert: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAnalysis: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getSarif: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listAlertInstances: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listAlertsForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listAlertsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listAlertsInstances: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listRecentAnalyses: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateAlert: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    uploadSarif: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  codesOfConduct: {
    getAllCodesOfConduct: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getConductCode: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  codespaces: {
    addRepositoryForSecretForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    codespaceMachinesForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createOrUpdateRepoSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createOrUpdateSecretForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createWithPrForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createWithRepoForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteFromOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteRepoSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteSecretForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    exportForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getExportDetailsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPublicKeyForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRepoPublicKey: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRepoSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getSecretForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listDevcontainersInRepositoryForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listInOrganization: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listInRepositoryForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listRepoSecrets: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listRepositoriesForSecretForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listSecretsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeRepositoryForSecretForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    repoMachinesForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setRepositoriesForSecretForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    startForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    stopForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    stopInOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  dependabot: {
    addSelectedRepoToOrgSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createOrUpdateOrgSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createOrUpdateRepoSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteOrgSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteRepoSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getOrgPublicKey: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getOrgSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRepoPublicKey: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRepoSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listOrgSecrets: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listRepoSecrets: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listSelectedReposForOrgSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeSelectedRepoFromOrgSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setSelectedReposForOrgSecret: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  dependencyGraph: {
    createRepositorySnapshot: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    diffRange: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  emojis: {
    get: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  enterpriseAdmin: {
    addCustomLabelsToSelfHostedRunnerForEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    disableSelectedOrganizationGithubActionsEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    enableSelectedOrganizationGithubActionsEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAllowedActionsEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getGithubActionsPermissionsEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getServerStatistics: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listLabelsForSelfHostedRunnerForEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listSelectedOrganizationsEnabledGithubActionsEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeAllCustomLabelsFromSelfHostedRunnerForEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeCustomLabelFromSelfHostedRunnerForEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setAllowedActionsEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setCustomLabelsForSelfHostedRunnerForEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setGithubActionsPermissionsEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setSelectedOrganizationsEnabledGithubActionsEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  gists: {
    checkIsStarred: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    create: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    delete: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    fork: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    get: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRevision: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    list: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listComments: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listCommits: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForks: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPublic: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listStarred: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    star: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    unstar: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    update: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  git: {
    createBlob: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createCommit: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createRef: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createTag: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createTree: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteRef: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getBlob: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getCommit: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRef: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getTag: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getTree: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listMatchingRefs: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateRef: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  gitignore: {
    getAllTemplates: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getTemplate: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  interactions: {
    getRestrictionsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRestrictionsForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRestrictionsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRestrictionsForYourPublicRepos: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeRestrictionsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeRestrictionsForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeRestrictionsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeRestrictionsForYourPublicRepos: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setRestrictionsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setRestrictionsForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setRestrictionsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setRestrictionsForYourPublicRepos: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  issues: {
    addAssignees: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    addLabels: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    checkUserCanBeAssigned: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    create: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createLabel: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createMilestone: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteLabel: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteMilestone: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    get: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getEvent: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getLabel: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getMilestone: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    list: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listAssignees: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listComments: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listCommentsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listEvents: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listEventsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listEventsForTimeline: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listLabelsForMilestone: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listLabelsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listLabelsOnIssue: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listMilestones: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    lock: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeAllLabels: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeAssignees: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeLabel: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setLabels: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    unlock: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    update: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateLabel: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateMilestone: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  licenses: {
    get: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAllCommonlyUsed: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  markdown: {
    render: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    renderRaw: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  meta: {
    get: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getOctocat: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getZen: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    root: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  migrations: {
    cancelImport: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteArchiveForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteArchiveForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    downloadArchiveForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getArchiveForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getCommitAuthors: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getImportStatus: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getLargeFiles: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getStatusForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getStatusForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReposForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReposForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReposForUser: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    mapCommitAuthor: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setLfsPreference: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    startForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    startForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    startImport: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    unlockRepoForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    unlockRepoForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateImport: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  orgs: {
    blockUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    cancelInvitation: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    checkBlockedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    checkMembershipForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    checkPublicMembershipForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    convertMemberToOutsideCollaborator: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createInvitation: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createWebhook: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteWebhook: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    get: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getMembershipForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getMembershipForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getWebhook: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getWebhookConfigForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getWebhookDelivery: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    list: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listAppInstallations: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listBlockedUsers: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listCustomRoles: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listFailedInvitations: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listInvitationTeams: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listMembers: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listMembershipsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listOutsideCollaborators: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPendingInvitations: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPublicMembers: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listWebhookDeliveries: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listWebhooks: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    pingWebhook: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    redeliverWebhookDelivery: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeMember: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeMembershipForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeOutsideCollaborator: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removePublicMembershipForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setMembershipForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setPublicMembershipForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    unblockUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    update: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateMembershipForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateWebhook: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateWebhookConfigForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  packages: {
    deletePackageForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deletePackageForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deletePackageForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deletePackageVersionForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deletePackageVersionForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deletePackageVersionForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAllPackageVersionsForAPackageOwnedByAnOrg: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAllPackageVersionsForPackageOwnedByOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAllPackageVersionsForPackageOwnedByUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPackageForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPackageForOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPackageForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPackageVersionForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPackageVersionForOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPackageVersionForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPackagesForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPackagesForOrganization: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPackagesForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    restorePackageForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    restorePackageForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    restorePackageForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    restorePackageVersionForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    restorePackageVersionForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    restorePackageVersionForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  projects: {
    addCollaborator: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createCard: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createColumn: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    delete: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteCard: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteColumn: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    get: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getCard: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getColumn: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPermissionForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listCards: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listCollaborators: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listColumns: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    moveCard: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    moveColumn: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeCollaborator: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    update: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateCard: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateColumn: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  pulls: {
    checkIfMerged: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    create: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createReplyForReviewComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createReview: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createReviewComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deletePendingReview: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteReviewComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    dismissReview: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    get: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getReview: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getReviewComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    list: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listCommentsForReview: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listCommits: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listFiles: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listRequestedReviewers: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReviewComments: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReviewCommentsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReviews: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    merge: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeRequestedReviewers: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    requestReviewers: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    submitReview: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    update: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateBranch: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateReview: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateReviewComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  rateLimit: {
    get: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  reactions: {
    createForCommitComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createForIssue: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createForIssueComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createForPullRequestReviewComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createForRelease: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createForTeamDiscussionCommentInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createForTeamDiscussionInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteForCommitComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteForIssue: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteForIssueComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteForPullRequestComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteForRelease: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteForTeamDiscussion: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteForTeamDiscussionComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForCommitComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForIssue: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForIssueComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForPullRequestReviewComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForRelease: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForTeamDiscussionCommentInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForTeamDiscussionInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  repos: {
    acceptInvitation: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    acceptInvitationForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    addAppAccessRestrictions: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    addCollaborator: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    addStatusCheckContexts: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    addTeamAccessRestrictions: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    addUserAccessRestrictions: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    checkCollaborator: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    checkVulnerabilityAlerts: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    codeownersErrors: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    compareCommits: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    compareCommitsWithBasehead: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createAutolink: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createCommitComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createCommitSignatureProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createCommitStatus: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createDeployKey: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createDeployment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createDeploymentStatus: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createDispatchEvent: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createFork: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createOrUpdateEnvironment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createOrUpdateFileContents: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createPagesSite: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createRelease: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createTagProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createUsingTemplate: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createWebhook: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    declineInvitation: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    declineInvitationForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    delete: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteAccessRestrictions: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteAdminBranchProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteAnEnvironment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteAutolink: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteBranchProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteCommitComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteCommitSignatureProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteDeployKey: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteDeployment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteFile: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteInvitation: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deletePagesSite: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deletePullRequestReviewProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteRelease: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteReleaseAsset: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteTagProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteWebhook: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    disableAutomatedSecurityFixes: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    disableLfsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    disableVulnerabilityAlerts: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    downloadArchive: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    downloadTarballArchive: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    downloadZipballArchive: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    enableAutomatedSecurityFixes: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    enableLfsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    enableVulnerabilityAlerts: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    generateReleaseNotes: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    get: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAccessRestrictions: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAdminBranchProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAllEnvironments: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAllStatusCheckContexts: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAllTopics: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAppsWithAccessToProtectedBranch: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAutolink: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getBranch: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getBranchProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getClones: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getCodeFrequencyStats: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getCollaboratorPermissionLevel: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getCombinedStatusForRef: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getCommit: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getCommitActivityStats: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getCommitComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getCommitSignatureProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getCommunityProfileMetrics: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getContent: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getContributorsStats: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getDeployKey: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getDeployment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getDeploymentStatus: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getEnvironment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getLatestPagesBuild: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getLatestRelease: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPages: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPagesBuild: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPagesHealthCheck: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getParticipationStats: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPullRequestReviewProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPunchCardStats: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getReadme: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getReadmeInDirectory: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getRelease: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getReleaseAsset: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getReleaseByTag: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getStatusChecksProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getTeamsWithAccessToProtectedBranch: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getTopPaths: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getTopReferrers: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getUsersWithAccessToProtectedBranch: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getViews: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getWebhook: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getWebhookConfigForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getWebhookDelivery: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listAutolinks: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listBranches: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listBranchesForHeadCommit: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listCollaborators: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listCommentsForCommit: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listCommitCommentsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listCommitStatusesForRef: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listCommits: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listContributors: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listDeployKeys: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listDeploymentStatuses: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listDeployments: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForks: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listInvitations: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listInvitationsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listLanguages: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPagesBuilds: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPublic: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPullRequestsAssociatedWithCommit: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReleaseAssets: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReleases: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listTagProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listTags: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listTeams: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listWebhookDeliveries: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listWebhooks: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    merge: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    mergeUpstream: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    pingWebhook: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    redeliverWebhookDelivery: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeAppAccessRestrictions: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeCollaborator: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeStatusCheckContexts: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeStatusCheckProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeTeamAccessRestrictions: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeUserAccessRestrictions: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    renameBranch: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    replaceAllTopics: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    requestPagesBuild: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setAdminBranchProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setAppAccessRestrictions: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setStatusCheckContexts: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setTeamAccessRestrictions: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setUserAccessRestrictions: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    testPushWebhook: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    transfer: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    update: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateBranchProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateCommitComment: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateInformationAboutPagesSite: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateInvitation: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updatePullRequestReviewProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateRelease: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateReleaseAsset: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateStatusCheckPotection: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateStatusCheckProtection: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateWebhook: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateWebhookConfigForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    uploadReleaseAsset: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  search: {
    code: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    commits: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    issuesAndPullRequests: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    labels: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    repos: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    topics: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    users: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  secretScanning: {
    getAlert: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listAlertsForEnterprise: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listAlertsForOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listAlertsForRepo: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listLocationsForAlert: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateAlert: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  teams: {
    addOrUpdateMembershipForUserInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    addOrUpdateProjectPermissionsInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    addOrUpdateRepoPermissionsInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    checkPermissionsForProjectInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    checkPermissionsForRepoInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    create: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createDiscussionCommentInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createDiscussionInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteDiscussionCommentInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteDiscussionInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getByName: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getDiscussionCommentInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getDiscussionInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getMembershipForUserInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    list: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listChildInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listDiscussionCommentsInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listDiscussionsInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listMembersInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPendingInvitationsInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listProjectsInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listReposInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeMembershipForUserInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeProjectInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    removeRepoInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateDiscussionCommentInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateDiscussionInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateInOrg: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  },
  users: {
    addEmailForAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    addEmailForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    block: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    checkBlocked: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    checkFollowingForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    checkPersonIsFollowedByAuthenticated: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createGpgKeyForAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createGpgKeyForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createPublicSshKeyForAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    createPublicSshKeyForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteEmailForAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteEmailForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteGpgKeyForAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deleteGpgKeyForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deletePublicSshKeyForAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    deletePublicSshKeyForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    follow: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getAuthenticated: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getByUsername: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getContextForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getGpgKeyForAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getGpgKeyForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPublicSshKeyForAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    getPublicSshKeyForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    list: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listBlockedByAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listBlockedByAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listEmailsForAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listEmailsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listFollowedByAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listFollowedByAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listFollowersForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listFollowersForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listFollowingForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listGpgKeysForAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listGpgKeysForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listGpgKeysForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPublicEmailsForAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPublicEmailsForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPublicKeysForUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPublicSshKeysForAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    listPublicSshKeysForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setPrimaryEmailVisibilityForAuthenticated: [Function: withDecorations] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    setPrimaryEmailVisibilityForAuthenticatedUser: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    unblock: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    unfollow: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    },
    updateAuthenticated: [Function: newApi] {
      endpoint: [Function],
      defaults: [Function: bound withDefaults]
    }
  }
}
{
  addAssignees: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  addLabels: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  checkUserCanBeAssigned: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  create: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  createComment: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  createLabel: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  createMilestone: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  deleteComment: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  deleteLabel: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  deleteMilestone: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  get: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  getComment: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  getEvent: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  getLabel: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  getMilestone: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  list: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  listAssignees: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  listComments: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  listCommentsForRepo: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  listEvents: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  listEventsForRepo: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  listEventsForTimeline: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  listForAuthenticatedUser: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  listForOrg: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  listForRepo: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  listLabelsForMilestone: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  listLabelsForRepo: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  listLabelsOnIssue: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  listMilestones: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  lock: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  removeAllLabels: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  removeAssignees: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  removeLabel: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  setLabels: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  unlock: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  update: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  updateComment: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  updateLabel: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  },
  updateMilestone: [Function: newApi] {
    endpoint: [Function: bound endpointWithDefaults] {
      DEFAULTS: [Object],
      defaults: [Function: bound withDefaults],
      merge: [Function: bound merge],
      parse: [Function: parse]
    },
    defaults: [Function: bound withDefaults]
  }
}
undefined
{ owner: 'jlrosende', repo: 'actions-test', number: 42 }